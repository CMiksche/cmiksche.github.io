<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Migrate on M5E&#39;s Blog</title>
    <link>https://blog.m5e.de/tags/Migrate/</link>
    <description>Recent content in Migrate on M5E&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 17 Feb 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.m5e.de/tags/Migrate/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Manually Migrate ZITADEL with PostgreSQL</title>
      <link>https://blog.m5e.de/post/manually-migrate-zitadel-with-postgresql/</link>
      <pubDate>Sat, 17 Feb 2024 00:00:00 +0000</pubDate>
      
      <guid>https://blog.m5e.de/post/manually-migrate-zitadel-with-postgresql/</guid>
      <description>As you, the reader, found this article, it is likely that you want to manually migrate the ZITADEL PostgreSQL database to a new version.
Now, normally this step is being done by the zitadel setup command with the --init-projections=true flag but, as we all know since &amp;ldquo;2001: A Space Odyssey&amp;rdquo;, computers can&amp;rsquo;t be trusted - so you are either paranoid or something went terribly wrong.
For manually updating the database, we should first understand the structure a bit.</description>
      <content>&lt;p&gt;As you, the reader, found this article, it is likely that you want to manually migrate the ZITADEL PostgreSQL database to a new version.&lt;/p&gt;
&lt;p&gt;Now, normally this step is being done by the &lt;code&gt;zitadel setup&lt;/code&gt; command with the &lt;code&gt;--init-projections=true&lt;/code&gt; flag but, as we all know since &amp;ldquo;2001: A Space Odyssey&amp;rdquo;, computers can&amp;rsquo;t be trusted - so you are either paranoid or something went terribly wrong.&lt;/p&gt;
&lt;p&gt;For manually updating the database, we should first understand the structure a bit. So far, the Zitadel Team seems to use versioning for their tables - meaning they create a new table for every change instead of just altering the current table. This leads to some beautifully structured schemas full of tables like &lt;code&gt;users6&lt;/code&gt;, &lt;code&gt;users7&lt;/code&gt; and &lt;code&gt;users8&lt;/code&gt; up to &lt;code&gt;users10&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;I don&amp;rsquo;t know if this structure is still there at the time of you reading this, but in this post I will just go with the assumption that Zitadel Developers are afraid of altering and love version numbers.&lt;/p&gt;
&lt;h2 id=&#34;common-problems&#34;&gt;Common Problems&lt;/h2&gt;
&lt;p&gt;The reason, I write this article, is my database wasn&amp;rsquo;t migrated correctly. In my case the command said everything is migrated, but then I encountered errors like &lt;code&gt;unable to retrieve client by id&lt;/code&gt;, &lt;code&gt;migration already started, will check again in 5 seconds&lt;/code&gt; or &lt;code&gt;{&amp;quot;error&amp;quot;:&amp;quot;invalid_request&amp;quot;,&amp;quot;error_description&amp;quot;:&amp;quot;Errors.App.NotFound&amp;quot;}&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;All of these errors point to the database. In my case all the new tables were created but some of the data was still only in the old tables and in other cases only some of the rows got copied into the new tables.&lt;/p&gt;
&lt;h2 id=&#34;manually-migrating&#34;&gt;Manually Migrating&lt;/h2&gt;
&lt;p&gt;Before continuing, I would recommend that all the following steps are being done on a cloned instance, not on the production setup. You should also write down every SQL query you create so that you can reproduce the migration in case it was successful on the test instance.&lt;/p&gt;
&lt;h3 id=&#34;identifying-the-right-tables&#34;&gt;Identifying the right tables&lt;/h3&gt;
&lt;p&gt;To migrate the database, you should first be sure what the current tables are. At the time of me writing this, this is normally the table with the highest number - e.g. &lt;code&gt;projections.apps6&lt;/code&gt; instead of &lt;code&gt;projections.apps4&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Now, you should make sure that this table is actually the right table - what if the table didn&amp;rsquo;t even get created? You can take a look at the source code.&lt;/p&gt;
&lt;p&gt;Currently, the projections are in the &lt;code&gt;zitadel/internal/query/projection&lt;/code&gt; folder. Example: the &lt;code&gt;app.go&lt;/code&gt; file has the following lines:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;AppProjectionTable&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;projections.apps6&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;AppAPITable&lt;/span&gt;        = &lt;span style=&#34;color:#a6e22e&#34;&gt;AppProjectionTable&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;_&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;appAPITableSuffix&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;AppOIDCTable&lt;/span&gt;       = &lt;span style=&#34;color:#a6e22e&#34;&gt;AppProjectionTable&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;_&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;appOIDCTableSuffix&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;AppSAMLTable&lt;/span&gt;       = &lt;span style=&#34;color:#a6e22e&#34;&gt;AppProjectionTable&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;_&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;appSAMLTableSuffix&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This gives us already 4 current table names. You should make sure that you check out the right version tag on GitHub so that you don&amp;rsquo;t look at outdated or Code which is still in development.&lt;/p&gt;
&lt;p&gt;We should also first do the tables without foreign keys, only after that the tables with foreign keys.&lt;/p&gt;
&lt;h3 id=&#34;checking-columns&#34;&gt;Checking Columns&lt;/h3&gt;
&lt;p&gt;Next, we should make sure that the tables we want to migrate have the same columns. Some older tables have e.g. &lt;code&gt;owner_removed&lt;/code&gt; columns which are &lt;a href=&#34;https://github.com/zitadel/zitadel/issues/6885&#34;&gt;not needed&lt;/a&gt; anymore.&lt;/p&gt;
&lt;p&gt;This can be done by e.g.:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;DROP&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;INDEX&lt;/span&gt; projections.apps5_owner_removed_idx;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; projections.apps5 &lt;span style=&#34;color:#66d9ef&#34;&gt;DROP&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;COLUMN&lt;/span&gt; owner_removed;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;migrating-rows&#34;&gt;Migrating Rows&lt;/h3&gt;
&lt;p&gt;If the old and the new table have the same columns, we can easily transfer the data:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;INTO&lt;/span&gt; projections.apps6 &lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; projections.apps4;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In some cases, like when only some data got copied, we might need to only transfer unique entries:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; projections.users8 &lt;span style=&#34;color:#66d9ef&#34;&gt;source&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;EXISTS&lt;/span&gt; (
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; projections.users10 destination 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; destination.username &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;source&lt;/span&gt;.username
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Only in a few rare cases you will need to specify the column names:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;INTO&lt;/span&gt; login_names3_users (id, user_name, resource_owner, instance_id)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; id, user_name, resource_owner, instance_id
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; login_names2_users &lt;span style=&#34;color:#66d9ef&#34;&gt;source&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;EXISTS&lt;/span&gt; (
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; login_names3_users destination
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;WHERE&lt;/span&gt; destination.user_name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;source&lt;/span&gt;.user_name
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;deleting-the-old-table&#34;&gt;Deleting the old table&lt;/h3&gt;
&lt;p&gt;After being sure that we migrated all the content into the right table, we can delete the old one:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;DROP&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; projections.idp_templates2_google;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;finishing&#34;&gt;Finishing&lt;/h2&gt;
&lt;p&gt;This whole process might take some time, but if you do everything correct, it will work. As I wrote before, it is best done in a test system, not in production, and normally you shouldn&amp;rsquo;t need this article because the &lt;code&gt;setup&lt;/code&gt; step from Zitadel should do this work for you.&lt;/p&gt;
&lt;p&gt;If you searched for this article, I guess you could have found some bug, and probably writing a &lt;a href=&#34;https://github.com/zitadel/zitadel/issues/new/choose&#34;&gt;GitHub Issue&lt;/a&gt; is also a good idea.&lt;/p&gt;
</content>
    </item>
    
  </channel>
</rss>
