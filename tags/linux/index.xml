<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>linux on M5E&#39;s Blog</title>
    <link>https://blog.m5e.de/tags/linux/</link>
    <description>Recent content in linux on M5E&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 08 Aug 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.m5e.de/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>The Reason why Linux Gaming is so limited</title>
      <link>https://blog.m5e.de/post/the-reason-why-linux-gaming-is-so-limited/</link>
      <pubDate>Mon, 08 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://blog.m5e.de/post/the-reason-why-linux-gaming-is-so-limited/</guid>
      <description>Ever tried Gaming on a Linux system? Even though Linux exists since more than 30 years now, it is still hard to play a Game on it. Most Games don&amp;rsquo;t even publish a release for Linux. That&amp;rsquo;s why projects like Wine exist (Wine provides a compatibility layer so that Linux Users can play Windows Games)
Why is it like that? For that, we need to understand how a Game works and how a Game Developer thinks.</description>
      <content>&lt;p&gt;Ever tried Gaming on a Linux system? Even though Linux exists since more than 30 years now, it is still hard to play a Game on it. Most Games don&amp;rsquo;t even publish a release for Linux. That&amp;rsquo;s why projects like Wine exist (Wine provides a compatibility layer so that Linux Users can play Windows Games)&lt;/p&gt;
&lt;h2 id=&#34;why-is-it-like-that&#34;&gt;Why is it like that?&lt;/h2&gt;
&lt;p&gt;For that, we need to understand how a Game works and how a Game Developer thinks. Game Developer need to earn money so that they can buy e.g. food. For that, targeting a big Group of Customers is important.&lt;/p&gt;
&lt;p&gt;When a Game Developer writes a Game, he doesn&amp;rsquo;t want to write separate Code for every GPU / CPU. In the early days of computing (e.g. the C64 and Atari days), this was the case. Back then, developer wrote code for every different GPU and CPU. This is very time-consuming and if Companies would still act like that, we would have to wait even longer for the e.g. next GTA 6 Game or the next Elder Scrolls.&lt;/p&gt;
&lt;p&gt;Then Companies like Microsoft and Silicon Graphics came. These companies did something really great for all Game Developers. They provided APIs which can be accessed by one Interface and which handle the different GPUs for you.
This means, a Game Developer only has to write the code once and these APIs handle the rest. Now publishing a Game for different computers is easier.&lt;/p&gt;
&lt;p&gt;This APIs are named DirectX (from Microsoft) and OpenGL. Because DirectX is from Microsoft, the API was only available for Windows. OpenGL on the other hand is available for a wide range of Operating Systems.
OpenGL is also Open Source which means every developer can take a look at the code.&lt;/p&gt;
&lt;p&gt;Now, if you can think logical, you already found the reason why Linux Gaming is so limited. The question about the Availability of Games is a Question about which API is more successful.&lt;/p&gt;
&lt;p&gt;Most people use Windows. Microsoft provides DirectX for Game Development, so most Game Developers choose DirectX as API platform because they can reach most of the people by that.&lt;/p&gt;
&lt;p&gt;If OpenGL would be more successful, then we would have more Games for Linux because OpenGL is compatible with Linux.&lt;/p&gt;
&lt;h2 id=&#34;the-future&#34;&gt;The Future&lt;/h2&gt;
&lt;p&gt;In the past, Game Developers used OpenGL because they could target Windows, Linux and macOS. Apple however, decided to deprecate OpenGL APIs on all of their platforms because they now have their own proprietary &amp;ldquo;Metal&amp;rdquo; API.&lt;/p&gt;
&lt;p&gt;Many features (like Ray tracing) are only available in these proprietary APIs.&lt;/p&gt;
&lt;p&gt;So probably many developers will still choose proprietary APIs like DirectX or Metal in the future because they provide better features which result in better Games.&lt;/p&gt;
&lt;p&gt;The reason behind this is that companies like Microsoft and Apple want that. They earn way more money that way. Developers have to pay fees and if they use a Windows-only or Apple-only API, then this will result into exclusive titles which are only available on one platform and customers will choose the platform with the better exclusive titles.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Forget Bash, take Python!</title>
      <link>https://blog.m5e.de/bash/script/python/linux/2020/05/22/forget-bash-take-python.html</link>
      <pubDate>Fri, 22 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://blog.m5e.de/bash/script/python/linux/2020/05/22/forget-bash-take-python.html</guid>
      <description>I wrote bash scripts for several years now. You can find old bash scripts of mine on GitHub but most of them aren&amp;rsquo;t maintained anymore - and I have a reason for that.
But before I give you my reasons for not using many bash scripts anymore, lets look at the benefits of bash:
It super easy and you basically already can it if you write Linux / BSD commands There are frameworks out now which give you advanced features like testing It works out of the box on nearly every Linux / BSD system Okay - sounds good - so what&amp;rsquo;s my problem?</description>
      <content>&lt;p&gt;I wrote bash scripts for several years now. You can find old bash scripts of mine on GitHub but most of them aren&amp;rsquo;t maintained anymore - and I have a reason for that.&lt;/p&gt;
&lt;p&gt;But before I give you my reasons for not using many bash scripts anymore, lets look at the benefits of bash:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It super easy and you basically already can it if you write Linux / BSD commands&lt;/li&gt;
&lt;li&gt;There are frameworks out now which give you advanced features like testing&lt;/li&gt;
&lt;li&gt;It works out of the box on nearly every Linux / BSD system&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Okay - sounds good - so what&amp;rsquo;s my problem?&lt;/p&gt;
&lt;p&gt;Bash is limited. E.g. it doesn&amp;rsquo;t work out of the box in Windows and I switched my default shell in Linux to fish. But let&amp;rsquo;s break down a few points why Bash isn&amp;rsquo;t optimal for me:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You tend to write platform specific code - e.g. I switched from Debian to Arch Linux and had to replace the &lt;code&gt;apt-get&lt;/code&gt; commands with &lt;code&gt;pacman&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;I use fish as default shell. You can use Bash-Scripts with fish, but it&amp;rsquo;s more complicated &amp;hellip;&lt;/li&gt;
&lt;li&gt;Linux isn&amp;rsquo;t my only operating system - I run Windows and macOS machines as well.&lt;/li&gt;
&lt;li&gt;I love features of higher level programming languages like Python.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And how does Python solve this problem?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It runs out of the box on many Linux systems&lt;/li&gt;
&lt;li&gt;It&amp;rsquo;s cross-platform - the same code can run under Linux, Windows, macOS, &amp;hellip; but you also can check the current system and write platform specific code for that&lt;/li&gt;
&lt;li&gt;It is also super easy and makes fun&lt;/li&gt;
&lt;li&gt;Testing and more advanced features are build in - no need to install packages&lt;/li&gt;
&lt;li&gt;Like bash, it is already used for automating tasks in many systems (so you can find tons of help online)&lt;/li&gt;
&lt;li&gt;You can simply access the operating system&lt;/li&gt;
&lt;li&gt;Distribution is also very simple - just create a package and pip can install it from the PyPI, private registry or a Git-Repo&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Languages like Go would also be interesting for automating tasks in your Linux system but Go has things like pointers and types. Python is more similar to Bash - very simple without advanced topics like types or pointers.&lt;/p&gt;
&lt;p&gt;I created many python scripts for things which solved bash scripts before. And my python scripts all have unit tests and detect the current running operating system. Whereas my bash scripts only worked on Debian systems do my python scripts work on all my used operating systems. So it has saved me a lot of work.&lt;/p&gt;
&lt;p&gt;But I also continue to use little bash scripts for simple tasks like &amp;ldquo;open this on startup&amp;rdquo; - I think it&amp;rsquo;s important to be aware, that higher level languages like python have a big benefit if you want to switch your system but use the same scripts.&lt;/p&gt;
</content>
    </item>
    
  </channel>
</rss>
