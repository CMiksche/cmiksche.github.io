<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>python on M5E&#39;s Blog</title>
    <link>https://blog.m5e.de/tags/python/</link>
    <description>Recent content in python on M5E&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 29 Aug 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.m5e.de/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Benchmarking Go, Crystal, Python and JavaScript</title>
      <link>https://blog.m5e.de/post/benchmarking-go-crystal-python-and-js/</link>
      <pubDate>Sat, 29 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://blog.m5e.de/post/benchmarking-go-crystal-python-and-js/</guid>
      <description>Benford&amp;rsquo;s Law After watching a Netflix documentary about Benford&amp;rsquo;s Law (&amp;ldquo;connected&amp;rdquo; Season 1 Episode 4 &amp;ldquo;Digits&amp;rdquo;), I got really interested in it because it can help detect fraud in e.g. balance sheets. So I searched my favorite programming languages and detected that there is no npm Package for checking Benford&amp;rsquo;s Law.
Sooo &amp;hellip; Long story short: I created nearly identical libraries for doing a Benford&amp;rsquo;s Law check in JavaScript, Go and Crystal.</description>
      <content>&lt;h2 id=&#34;benfords-law&#34;&gt;Benford&amp;rsquo;s Law&lt;/h2&gt;
&lt;p&gt;After watching a Netflix documentary about Benford&amp;rsquo;s Law (&amp;ldquo;connected&amp;rdquo; Season 1 Episode 4 &amp;ldquo;Digits&amp;rdquo;), I got really interested in it because it can help detect fraud in e.g. balance sheets. So I searched my favorite programming languages and detected that there is no npm Package for checking Benford&amp;rsquo;s Law.&lt;/p&gt;
&lt;p&gt;Sooo &amp;hellip; Long story short: I created nearly identical libraries for doing a Benford&amp;rsquo;s Law check in JavaScript, Go and Crystal. My inspiration was from a Python library - so the algorithm of these libraries is nearly identical. There are some catches like I used many different math libraries for calculating chi-square and some of these libraries offer addition information, others not &amp;hellip;&lt;/p&gt;
&lt;p&gt;But I think this gives us a good example of a algorithm which is implemented in different programming languages and can be benchmarked. That&amp;rsquo;s what I wanna do in this post: Comparing the Benford&amp;rsquo;s Law check in different Languages.&lt;/p&gt;
&lt;h2 id=&#34;testing-the-performance&#34;&gt;Testing the Performance&lt;/h2&gt;
&lt;p&gt;Repo with Source Code: &lt;a href=&#34;https://github.com/CMiksche/benford-benchmark&#34;&gt;https://github.com/CMiksche/benford-benchmark&lt;/a&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Language &amp;amp; Version&lt;/th&gt;
&lt;th&gt;GitHub Repo of Library&lt;/th&gt;
&lt;th&gt;Performance&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Python 3.8.5&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/target/huntlib&#34;&gt;huntlib&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;1,86 secs&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Crystal 0.35.1&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/CMiksche/benfordslaw.cr&#34;&gt;benfordslaw.cr&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;14,20 millis&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Go 1.15&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/CMiksche/benford&#34;&gt;benford&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;7,03 millis&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;JS (node) v14.8.0&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/CMiksche/benfordslaw&#34;&gt;benfordslaw&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;164,71 millis&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;I didn&amp;rsquo;t expected that big difference. Go is clearly the winner here and that with big distance to the other implementations. One reason why Python took so long may be that the used library shows additional information but I don&amp;rsquo;t think Python could compete with the other implementations if the library wouldn&amp;rsquo;t show more.&lt;/p&gt;
&lt;p&gt;It is also noteworthy that Go is very very fast compiling. Crystal isn&amp;rsquo;t even in the area of the Go compile time.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Forget Bash, take Python!</title>
      <link>https://blog.m5e.de/bash/script/python/linux/2020/05/22/forget-bash-take-python.html</link>
      <pubDate>Fri, 22 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://blog.m5e.de/bash/script/python/linux/2020/05/22/forget-bash-take-python.html</guid>
      <description>I wrote bash scripts for several years now. You can find old bash scripts of mine on GitHub but most of them aren&amp;rsquo;t maintained anymore - and I have a reason for that.
But before I give you my reasons for not using many bash scripts anymore, lets look at the benefits of bash:
 It super easy and you basically already can it if you write Linux / BSD commands There are frameworks out now which give you advanced features like testing It works out of the box on nearly every Linux / BSD system  Okay - sounds good - so what&amp;rsquo;s my problem?</description>
      <content>&lt;p&gt;I wrote bash scripts for several years now. You can find old bash scripts of mine on GitHub but most of them aren&amp;rsquo;t maintained anymore - and I have a reason for that.&lt;/p&gt;
&lt;p&gt;But before I give you my reasons for not using many bash scripts anymore, lets look at the benefits of bash:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It super easy and you basically already can it if you write Linux / BSD commands&lt;/li&gt;
&lt;li&gt;There are frameworks out now which give you advanced features like testing&lt;/li&gt;
&lt;li&gt;It works out of the box on nearly every Linux / BSD system&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Okay - sounds good - so what&amp;rsquo;s my problem?&lt;/p&gt;
&lt;p&gt;Bash is limited. E.g. it doesn&amp;rsquo;t work out of the box in Windows and I switched my default shell in Linux to fish. But let&amp;rsquo;s break down a few points why Bash isn&amp;rsquo;t optimal for me:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You tend to write platform specific code - e.g. I switched from Debian to Arch Linux and had to replace the &lt;code&gt;apt-get&lt;/code&gt; commands with &lt;code&gt;pacman&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;I use fish as default shell. You can use Bash-Scripts with fish, but it&amp;rsquo;s more complicated &amp;hellip;&lt;/li&gt;
&lt;li&gt;Linux isn&amp;rsquo;t my only operating system - I run Windows and macOS machines as well.&lt;/li&gt;
&lt;li&gt;I love features of higher level programming languages like Python.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And how does Python solve this problem?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It runs out of the box on many Linux systems&lt;/li&gt;
&lt;li&gt;It&amp;rsquo;s cross-platform - the same code can run under Linux, Windows, macOS, &amp;hellip; but you also can check the current system and write platform specific code for that&lt;/li&gt;
&lt;li&gt;It is also super easy and makes fun&lt;/li&gt;
&lt;li&gt;Testing and more advanced features are build in - no need to install packages&lt;/li&gt;
&lt;li&gt;Like bash, it is already used for automating tasks in many systems (so you can find tons of help online)&lt;/li&gt;
&lt;li&gt;You can simply access the operating system&lt;/li&gt;
&lt;li&gt;Distribution is also very simple - just create a package and pip can install it from the PyPI, private registry or a Git-Repo&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Languages like Go would also be interesting for automating tasks in your Linux system but Go has things like pointers and types. Python is more similar to Bash - very simple without advanced topics like types or pointers.&lt;/p&gt;
&lt;p&gt;I created many python scripts for things which solved bash scripts before. And my python scripts all have unit tests and detect the current running operating system. Whereas my bash scripts only worked on Debian systems do my python scripts work on all my used operating systems. So it has saved me a lot of work.&lt;/p&gt;
&lt;p&gt;But I also continue to use little bash scripts for simple tasks like &amp;ldquo;open this on startup&amp;rdquo; - I think it&amp;rsquo;s important to be aware, that higher level languages like python have a big benefit if you want to switch your system but use the same scripts.&lt;/p&gt;
</content>
    </item>
    
  </channel>
</rss>